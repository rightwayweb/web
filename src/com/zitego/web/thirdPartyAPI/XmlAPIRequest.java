package com.zitego.web.thirdPartyAPI;

import com.zitego.http.PostData;
import com.zitego.format.*;
import java.io.IOException;
import java.net.HttpURLConnection;

/**
 * This class encapsulates a request made to a third party api by xml.
 *
 * @author John Glorioso
 * @version $Id: XmlAPIRequest.java,v 1.1.1.1 2008/02/20 14:53:27 jglorioso Exp $
 */
public abstract class XmlAPIRequest extends PostAPIRequest implements Formattable
{
    /** The optional name of the xml field. */
    private String _fieldName;

    /**
     * Creates a new XmlAPIRequest.
     *
     * @param String The url to connect to.
     * @throws IllegalArgumentException if the url is null or has an invalid format.
     */
    public XmlAPIRequest(String url) throws IllegalArgumentException
    {
        this(url, null);
    }

    /**
     * Creates a new XmlAPIRequest with a field name for the xml document.
     *
     * @param String The url to connect to.
     * @param String The field name.
     * @throws IllegalArgumentException if the url is null or has an invalid format.
     */
    public XmlAPIRequest(String url, String name) throws IllegalArgumentException
    {
        super(url);
        _fieldName = name;
        //Set the content type to text/xml if the field name is not set
        if (_fieldName == null) getPostData().setContentType("text/xml");
    }

    /**
     * This sets the xml generated by format(FormatType.XML) as the post data.
     * You must define format in order to extend this class. This method is called
     * automatically through the ThirdPartyAPI.
     *
     * @param HttpURLConnection The connection.
     * @throws IllegalArgumentException if the connection is null.
     * @throws IOException if an error occurs setting the data.
     */
    public void setRequestData(HttpURLConnection conn) throws IllegalArgumentException, IOException
    {
        prepareRequest();
        super.setRequestData(conn);
    }

    public String toString()
    {
        prepareRequest();
        return super.toString();
    }

    private void prepareRequest()
    {
        try
        {
            String xml = format(FormatType.XML);
            if (_fieldName == null) getPostData().addData(xml);
            else addField(_fieldName, xml);
        }
        catch (UnsupportedFormatException ufe)
        {
            throw new RuntimeException("Cannot format request to xml", ufe);
        }
    }
}